{
  "Function to calculate nCr": {
    "prefix": "combination",
    "body": [
      "//nCr = n! * 1/r! * 1/(n-r)!",
      "",
      "vector<int> fact(MAX_N, 1), invFact(MAX_N, 1);",
      "",
      "int nCr(int n, int r) {",
      "  if (r > n) {",
      "    return 0;",
      "  }",
      "  return fact[n] * invFact[r] % MOD * invFact[n - r] % MOD;",
      "}",
      "",
      "int bin_pow(int a, int p) {",
      "  int res = 1;",
      "  while (p) {",
      "    if (!(p & 1)) {",
      "      (a *= a) %= MOD;",
      "      p /= 2;",
      "    } else {",
      "      (res *= a) %= MOD;",
      "      p--;",
      "    }",
      "  }",
      "  return res;",
      "}",
      "",
      "void pref() {",
      "  for (int i = 1; i < MAX_N; i++) {",
      "    fact[i] = (fact[i - 1] * i) % MOD;",
      "    invFact[i] = bin_pow(fact[i], MOD - 2);",
      "  }",
      "}"
    ],
    "description": "Function to calculate nCr"
  }
}